{
    "--comment--": "load",
    "type": "load",
    "file": "string"
},
{
    "--comment--": "load_result",
    "type": "load_result",
    "file": "string",
    "data": "string. base64 encoded bytes of numpy array",
    "shape": ["list of ints indicating shape of input"]
},
{
    "--comment--": "partition",
    "type": "partition",
    "input": "string. base64 encoded bytes of numpy array",
    "shape": ["list of ints indicating shape of input"],
    "convblockidx": "int. index of convolutional block, starts at 1",
    "partitionspecs": {
        "N": "int. number of partitions on vertical",
        "M": "int. number of partitions on horizontal",
        "x": "int. absolute position in input on horizontal",
        "y": "int. absolute position in input on vertical"
    }
},
{
    "--comment--": "partition result",
    "type": "partition_result",
    "tiles": [
        {
            "position": {
                "N": "position in grid on vertical, starts at 1",
                "M": "position in grid on horizontal, starts at 1",
                "x": "absolute position in input on horizontal",
                "y": "absolute position in input on vertical"
            },
            "data": "string. base64 encoded bytes of numpy array",
            "shape": ["list of ints indicating shape of input"]
        }
    ]
},
{
    "--comment--": "process",
    "type": "process",
    "input": "string. base64 encoded bytes of numpy array",
    "shape": ["list of ints indicating shape of input"],
    "convblockidx": "int. index of convolutional block, starts at 1",
    "core": "int. id of core to pin the inference to"
},
{
    "--comment--": "process result",
    "type": "process_result",
    "data": "string. base64 encoded bytes of numpy array",
    "shape": ["list of ints indicating shape of input"]
},
{
    "--comment--": "assemble",
    "type": "assemble",
    "convblockidx": "int. index of convolutional block, starts at 1",
    "tiles": [
        {
            "position": {
                "N": "position in grid on vertical, starts at 1",
                "M": "position in grid on horizontal, starts at 1",
                "x": "absolute position in input on horizontal",
                "y": "absolute position in input on vertical"
            },
            "data": "string. base64 encoded bytes of numpy array",
            "shape": ["list of ints indicating shape of input"]
        }
    ]
},
{
    "--comment--": "assemble result",
    "type": "assemble_result",
    "data": "string. base64 encoded bytes of numpy array",
    "shape": ["list of ints indicating shape of input"]
}
